################ROUTER
from fastapi import APIRouter, Request, Depends, Form
from fastapi.responses import HTMLResponse, RedirectResponse
from classes import Auth
from dependencies import get_db
from . import businessLogic
from sqlalchemy.orm import Session
from auth.schemas import EmployeeCreate

router = APIRouter()

@router.post("/register")
def register(employeeData: EmployeeCreate,db: Session = Depends(get_db)):
    message = "Registration Complete"
    return businessLogic.register(employeeData=employeeData, db=db), RedirectResponse(url=f"/register?message={message}")

##########business logic
import DB
import bcrypt
import DB.models
from sqlalchemy.orm import Session
from DB import CRUD
from classes import Auth
from dependencies import get_db
from fastapi.responses import HTMLResponse, RedirectResponse
from auth.schemas import EmployeeCreate
from fastapi import Depends, Form

#Hashes password with bcrypt algorithm
def password_hash(password: str):
    salt = bcrypt.gensalt(rounds=12)
    bytes = password.encode('utf-8')
    hashed = bcrypt.hashpw(bytes, salt)

    return hashed

def login():

    return None

def register(employeeData: EmployeeCreate,db: Session = Depends(get_db)):
    newEmp = DB.models.Employee(
        EIN = employeeData.EIN, 
        fName = employeeData.fName, 
        lName = employeeData.lName,
        startDate = employeeData.startDate, 
        role = employeeData.role,
        securityQuestion = employeeData.securityQuestion, 
        securityAnswer = employeeData.securityAnswer, 
        password = password_hash(employeeData.password),
        firstLogin = employeeData.firstLogin
        )
    message = CRUD.CRUD.creatUser(db,newEmp)
    return message

Auth.login = login
Auth.register = register 


###########schemas
from pydantic import BaseModel, Field
from fastapi import Form, Query

class EmployeeCreate(BaseModel):
    EIN: int = Form(...)
    fName: str = Form(...)
    lName: str = Form(...)
    startDate: str = Form(...)
    role: str = Form(...)
    securityQuestion: str = Form(...)
    securityAnswer: str = Form(...)
    password: str = Form(...)
    firstLogin: str = Form("yes")
